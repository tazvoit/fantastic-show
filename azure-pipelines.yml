name: $(Build.SourceBranchName).$(date:yyyyMMdd)$(rev:.r)
trigger:
- 'main'

variables:
  appRepository: 'fantastic-show'
  buildConfiguration: 'Release'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'azure-sa-token-tbb4v'
stages:
- stage: 'Build_Push'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build Package $(appRepository)'
    pool: 
      name: default
      vmImage: 'ubuntu-20.04'
    steps:
    - task: Maven@3
      displayName: 'Build and push the image to container registry'
      inputs:
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
        goals: 'package'
        mavenOptions: '-Xmx3072m'
        jdkArchitectureOption: 'x64'
        javaHomeOption: 'JDKVersion' 
        jdkVersionOption: 'default'
    - task: Maven@3
      displayName: Build Docker image
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'spring-boot:build-image'
        publishJUnitResults: false
        jdkArchitectureOption: 'x64'
        javaHomeOption: 'JDKVersion' 
        jdkVersionOption: 'default'
    - task: Docker@2
      displayName: Push Docker Images
      inputs:
        containerRegistry: 'dockerRegistryConnection'
        repository: $(appRepository)
        command: 'push'
        tags: |
          $(tag)
- stage: 'Deploy'
  displayName: 'Deploy the containers'
  dependsOn: Build_Push
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      name: default
      vmImage: 'ubuntu-20.04'
    environment: 'openshift-sandbox-jorge-medina-nuu'
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:          
          - download: current
            artifact: manifests
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: 'dockerRegistryConnection'
              kubernetesServiceConnection: 'openshift-sandbox-jorge-medina-nuu-dev-1651679158430'
              namespace: 'jorge-medina-nuu-dev'
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: 'openshift-sandbox-jorge-medina-nuu-dev-1651679158430'
              namespace: 'jorge-medina-nuu-dev'
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(RegistryName)/$(appRepository):$(tag)
